{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [calories, setCalories] = useState([]);\n  const [exercise, setExercise] = useState([]);\n\n  // Fetch JSON data from the public folder\n  useEffect(() => {\n    fetch(\"/data/calories.json\").then(response => response.json()).then(data => {\n      console.log(\"Calories Data Loaded:\", data.length);\n      setCalories(data);\n    }).catch(error => console.error(\"Error loading calories data:\", error));\n    fetch(\"/data/exercise.json\").then(response => response.json()).then(data => {\n      console.log(\"Exercise Data Loaded:\", data.length);\n      setExercise(data);\n    }).catch(error => console.error(\"Error loading exercise data:\", error));\n  }, []);\n  const generateResponse = userInput => {\n    const lowerCaseInput = userInput.toLowerCase();\n\n    // Check if user is asking about food/calories\n    const foodItem = calories.find(item => item.food.toLowerCase().includes(lowerCaseInput));\n    if (foodItem) {\n      return `The food \"${foodItem.food}\" contains ${foodItem.calories} calories per ${foodItem.unit}.`;\n    }\n\n    // Check if user is asking about exercise\n    const exerciseItem = exercise.find(item => item.activity.toLowerCase().includes(lowerCaseInput));\n    if (exerciseItem) {\n      return `The activity \"${exerciseItem.activity}\" burns around ${exerciseItem.calories_burned} calories per ${exerciseItem.unit}.`;\n    }\n\n    // Default response if no match is found\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise!\";\n  };\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    const botResponse = {\n      text: generateResponse(input),\n      sender: \"bot\"\n    };\n    setMessages([...messages, userMessage, botResponse]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"2px solid black\",\n      padding: \"10px\",\n      width: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Nutrition & Fitness Chatbot\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"200px\",\n      overflowY: \"scroll\",\n      border: \"1px solid gray\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    style: {\n      textAlign: msg.sender === \"user\" ? \"right\" : \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, msg.sender === \"user\" ? \"You: \" : \"Bot: \"), msg.text))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Ask me about food or exercise...\",\n    style: {\n      width: \"80%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","Chatbot","messages","setMessages","input","setInput","calories","setCalories","exercise","setExercise","fetch","then","response","json","data","console","log","length","catch","error","generateResponse","userInput","lowerCaseInput","toLowerCase","foodItem","find","item","food","includes","unit","exerciseItem","activity","calories_burned","handleSendMessage","trim","userMessage","text","sender","botResponse","border","padding","width","height","overflowY","map","msg","index","textAlign","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [calories, setCalories] = useState([]);\r\n  const [exercise, setExercise] = useState([]);\r\n\r\n  // Fetch JSON data from the public folder\r\n  useEffect(() => {\r\n    fetch(\"/data/calories.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Calories Data Loaded:\", data.length);\r\n        setCalories(data);\r\n      })\r\n      .catch((error) => console.error(\"Error loading calories data:\", error));\r\n\r\n    fetch(\"/data/exercise.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Exercise Data Loaded:\", data.length);\r\n        setExercise(data);\r\n      })\r\n      .catch((error) => console.error(\"Error loading exercise data:\", error));\r\n  }, []);\r\n\r\n  const generateResponse = (userInput) => {\r\n    const lowerCaseInput = userInput.toLowerCase();\r\n\r\n    // Check if user is asking about food/calories\r\n    const foodItem = calories.find((item) =>\r\n      item.food.toLowerCase().includes(lowerCaseInput)\r\n    );\r\n\r\n    if (foodItem) {\r\n      return `The food \"${foodItem.food}\" contains ${foodItem.calories} calories per ${foodItem.unit}.`;\r\n    }\r\n\r\n    // Check if user is asking about exercise\r\n    const exerciseItem = exercise.find((item) =>\r\n      item.activity.toLowerCase().includes(lowerCaseInput)\r\n    );\r\n\r\n    if (exerciseItem) {\r\n      return `The activity \"${exerciseItem.activity}\" burns around ${exerciseItem.calories_burned} calories per ${exerciseItem.unit}.`;\r\n    }\r\n\r\n    // Default response if no match is found\r\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise!\";\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    const botResponse = { text: generateResponse(input), sender: \"bot\" };\r\n\r\n    setMessages([...messages, userMessage, botResponse]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid black\", padding: \"10px\", width: \"400px\" }}>\r\n      <h2>Nutrition & Fitness Chatbot</h2>\r\n      <div style={{ height: \"200px\", overflowY: \"scroll\", border: \"1px solid gray\", padding: \"5px\" }}>\r\n        {messages.map((msg, index) => (\r\n          <p key={index} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\" }}>\r\n            <strong>{msg.sender === \"user\" ? \"You: \" : \"Bot: \"}</strong>\r\n            {msg.text}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder=\"Ask me about food or exercise...\"\r\n        style={{ width: \"80%\" }}\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}