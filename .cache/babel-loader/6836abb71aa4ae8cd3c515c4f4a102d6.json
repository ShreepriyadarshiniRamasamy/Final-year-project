{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState, useEffect } from 'react';\nconst Chatbot = () => {\n  const [caloriesData, setCaloriesData] = useState([]);\n  const [exerciseData, setExerciseData] = useState([]);\n  const [error, setError] = useState(null);\n  const [userInput, setUserInput] = useState('');\n  const [chatResponse, setChatResponse] = useState('Ask me about food or exercise!');\n  useEffect(() => {\n    // Fetch calories.json\n    fetch('/data/calories.json').then(response => response.json()).then(data => setCaloriesData(data)).catch(err => setError(`Error loading calories.json: ${err.message}`));\n\n    // Fetch exercise.json\n    fetch('/data/exercise.json').then(response => response.json()).then(data => setExerciseData(data)).catch(err => setError(`Error loading exercise.json: ${err.message}`));\n  }, []);\n\n  // Function to handle user queries\n  const handleUserQuery = () => {\n    if (!userInput.trim()) {\n      setChatResponse('Please enter a valid food or exercise name.');\n      return;\n    }\n    let response = \"I'm sorry, I couldn't find that information. Try asking about food or exercise.\";\n    if (caloriesData.length > 0) {\n      const food = caloriesData.find(item => {\n        var _item$name;\n        return ((_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.toLowerCase()) === userInput.toLowerCase();\n      });\n      if (food) {\n        response = `üçè ${food.name} contains ${food.calories} calories per ${food.quantity}.`;\n      }\n    }\n    if (exerciseData.length > 0) {\n      const exercise = exerciseData.find(item => {\n        var _item$name2;\n        return ((_item$name2 = item.name) === null || _item$name2 === void 0 ? void 0 : _item$name2.toLowerCase()) === userInput.toLowerCase();\n      });\n      if (exercise) {\n        response = `üèãÔ∏è ${exercise.name} burns ${exercise.calories_burned} calories in ${exercise.duration} minutes.`;\n      }\n    }\n    setChatResponse(response);\n    setUserInput('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Chatbot\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, \"Chatbot:\"), \" \", chatResponse), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ask about food or exercise...\",\n    value: userInput,\n    onChange: e => setUserInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUserQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Ask\"));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","Chatbot","caloriesData","setCaloriesData","exerciseData","setExerciseData","error","setError","userInput","setUserInput","chatResponse","setChatResponse","fetch","then","response","json","data","catch","err","message","handleUserQuery","trim","length","food","find","item","name","toLowerCase","calories","quantity","exercise","calories_burned","duration","color","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Chatbot = () => {\r\n  const [caloriesData, setCaloriesData] = useState([]);\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [chatResponse, setChatResponse] = useState('Ask me about food or exercise!');\r\n\r\n  useEffect(() => {\r\n    // Fetch calories.json\r\n    fetch('/data/calories.json')\r\n      .then((response) => response.json())\r\n      .then((data) => setCaloriesData(data))\r\n      .catch((err) => setError(`Error loading calories.json: ${err.message}`));\r\n\r\n    // Fetch exercise.json\r\n    fetch('/data/exercise.json')\r\n      .then((response) => response.json())\r\n      .then((data) => setExerciseData(data))\r\n      .catch((err) => setError(`Error loading exercise.json: ${err.message}`));\r\n  }, []);\r\n\r\n  // Function to handle user queries\r\n  const handleUserQuery = () => {\r\n    if (!userInput.trim()) {\r\n      setChatResponse('Please enter a valid food or exercise name.');\r\n      return;\r\n    }\r\n\r\n    let response = \"I'm sorry, I couldn't find that information. Try asking about food or exercise.\";\r\n\r\n    if (caloriesData.length > 0) {\r\n      const food = caloriesData.find((item) => item.name?.toLowerCase() === userInput.toLowerCase());\r\n      if (food) {\r\n        response = `üçè ${food.name} contains ${food.calories} calories per ${food.quantity}.`;\r\n      }\r\n    }\r\n\r\n    if (exerciseData.length > 0) {\r\n      const exercise = exerciseData.find((item) => item.name?.toLowerCase() === userInput.toLowerCase());\r\n      if (exercise) {\r\n        response = `üèãÔ∏è ${exercise.name} burns ${exercise.calories_burned} calories in ${exercise.duration} minutes.`;\r\n      }\r\n    }\r\n\r\n    setChatResponse(response);\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <h2>Chatbot</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      \r\n      <p><strong>Chatbot:</strong> {chatResponse}</p>\r\n      \r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ask about food or exercise...\"\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n      />\r\n      <button onClick={handleUserQuery}>Ask</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}