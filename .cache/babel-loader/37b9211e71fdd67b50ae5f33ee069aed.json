{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\"; // We'll create this CSS file for styling\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([{\n    text: \"Hello! How can I help you?\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n\n    // Generate bot response (basic rule-based logic)\n    setTimeout(() => {\n      const botResponse = {\n        text: getBotResponse(input),\n        sender: \"bot\"\n      };\n      setMessages(prevMessages => [...prevMessages, botResponse]);\n    }, 1000);\n  };\n\n  // Simple predefined responses\n  const getBotResponse = message => {\n    const lowerMsg = message.toLowerCase();\n    if (lowerMsg.includes(\"hello\") || lowerMsg.includes(\"hi\")) return \"Hi there! How can I assist you?\";\n    if (lowerMsg.includes(\"calories\")) return \"You can check the calorie breakdown in the Nutrition section.\";\n    if (lowerMsg.includes(\"food\")) return \"We analyze various food nutrients. What would you like to know?\";\n    return \"I'm not sure about that. Can you rephrase?\";\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `message ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, msg.text))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Ask me something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","Chatbot","messages","setMessages","text","sender","input","setInput","handleSend","trim","userMessage","setTimeout","botResponse","getBotResponse","prevMessages","message","lowerMsg","toLowerCase","includes","map","msg","index","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Chatbot.css\"; // We'll create this CSS file for styling\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([{ text: \"Hello! How can I help you?\", sender: \"bot\" }]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSend = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    setMessages([...messages, userMessage]);\r\n    setInput(\"\");\r\n\r\n    // Generate bot response (basic rule-based logic)\r\n    setTimeout(() => {\r\n      const botResponse = { text: getBotResponse(input), sender: \"bot\" };\r\n      setMessages((prevMessages) => [...prevMessages, botResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  // Simple predefined responses\r\n  const getBotResponse = (message) => {\r\n    const lowerMsg = message.toLowerCase();\r\n    if (lowerMsg.includes(\"hello\") || lowerMsg.includes(\"hi\")) return \"Hi there! How can I assist you?\";\r\n    if (lowerMsg.includes(\"calories\")) return \"You can check the calorie breakdown in the Nutrition section.\";\r\n    if (lowerMsg.includes(\"food\")) return \"We analyze various food nutrients. What would you like to know?\";\r\n    return \"I'm not sure about that. Can you rephrase?\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>{msg.text}</div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Ask me something...\" />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe,CAAC,CAAC;;AAExB,MAAMC,OAAO,GAAG,MAAM;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,CAAC;IAAEI,IAAI,EAAE,4BAA4B;IAAEC,MAAM,EAAE;EAAM,CAAC,CAAC,CAAC;EACjG,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,UAAU,GAAG,MAAM;IACvB,IAAI,CAACF,KAAK,CAACG,IAAI,EAAE,EAAE;IAEnB,MAAMC,WAAW,GAAG;MAAEN,IAAI,EAAEE,KAAK;MAAED,MAAM,EAAE;IAAO,CAAC;IACnDF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,WAAW,CAAC,CAAC;IACvCH,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACAI,UAAU,CAAC,MAAM;MACf,MAAMC,WAAW,GAAG;QAAER,IAAI,EAAES,cAAc,CAACP,KAAK,CAAC;QAAED,MAAM,EAAE;MAAM,CAAC;MAClEF,WAAW,CAAEW,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,WAAW,CAAC,CAAC;IAC/D,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIE,OAAO,IAAK;IAClC,MAAMC,QAAQ,GAAGD,OAAO,CAACE,WAAW,EAAE;IACtC,IAAID,QAAQ,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAIF,QAAQ,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,iCAAiC;IACnG,IAAIF,QAAQ,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE,OAAO,+DAA+D;IACzG,IAAIF,QAAQ,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,iEAAiE;IACvG,OAAO,4CAA4C;EACrD,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtB;IAAK,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzBhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB;IAAK,GAAG,EAAEA,KAAM;IAAC,SAAS,EAAG,WAAUD,GAAG,CAACf,MAAO,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEe,GAAG,CAAChB,IAAI,CAC/D,CAAC,CACE,eACN;IAAK,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzB;IAAO,IAAI,EAAC,MAAM;IAAC,KAAK,EAAEE,KAAM;IAAC,QAAQ,EAAGgB,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAC,WAAW,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAChH;IAAQ,OAAO,EAAEhB,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,MAAI,CAAS,CACtC,CACF;AAEV,CAAC;AAED,eAAeP,OAAO"},"metadata":{},"sourceType":"module"}