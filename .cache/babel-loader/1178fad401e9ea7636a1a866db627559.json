{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [caloriesData, setCaloriesData] = useState([]);\n  const [exerciseData, setExerciseData] = useState([]);\n\n  // Load JSON Data when component mounts\n  useEffect(() => {\n    fetch(\"/data/calories.json\").then(response => response.json()).then(data => {\n      console.log(\"Calories Data Loaded:\", data);\n      setCaloriesData(data);\n    }).catch(error => console.error(\"Error loading calories data:\", error));\n    fetch(\"/data/exercise.json\").then(response => response.json()).then(data => {\n      console.log(\"Exercise Data Loaded:\", data);\n      setExerciseData(data);\n    }).catch(error => console.error(\"Error loading exercise data:\", error));\n  }, []);\n\n  // Function to generate chatbot response\n  const generateResponse = userInput => {\n    if (!userInput) return \"I didn't understand that. Please ask again!\";\n    const lowerInput = userInput.toLowerCase(); // Ensure input is lowercase\n\n    // Check Calories Data\n    const foodMatch = caloriesData.find(item => {\n      var _item$name;\n      return (_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.toLowerCase().includes(lowerInput);\n    });\n    if (foodMatch) {\n      return `A ${foodMatch.name} contains ${foodMatch.calories} calories.`;\n    }\n\n    // Check Exercise Data\n    const exerciseMatch = exerciseData.find(item => {\n      var _item$activity;\n      return (_item$activity = item.activity) === null || _item$activity === void 0 ? void 0 : _item$activity.toLowerCase().includes(lowerInput);\n    });\n    if (exerciseMatch) {\n      return `You burn around ${exerciseMatch.calories_burned} calories by doing ${exerciseMatch.activity}.`;\n    }\n    return \"I'm sorry, I couldn't find that information.\";\n  };\n\n  // Handle user message send\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    const botMessage = {\n      text: generateResponse(input),\n      sender: \"bot\"\n    };\n    setMessages([...messages, userMessage, botMessage]);\n    setInput(\"\"); // Clear input field\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `message ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, msg.text))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ask me about food or exercise...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","Chatbot","messages","setMessages","input","setInput","caloriesData","setCaloriesData","exerciseData","setExerciseData","fetch","then","response","json","data","console","log","catch","error","generateResponse","userInput","lowerInput","toLowerCase","foodMatch","find","item","name","includes","calories","exerciseMatch","activity","calories_burned","handleSendMessage","trim","userMessage","text","sender","botMessage","map","msg","index","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [caloriesData, setCaloriesData] = useState([]);\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n\r\n  // Load JSON Data when component mounts\r\n  useEffect(() => {\r\n    fetch(\"/data/calories.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Calories Data Loaded:\", data);\r\n        setCaloriesData(data);\r\n      })\r\n      .catch((error) => console.error(\"Error loading calories data:\", error));\r\n\r\n    fetch(\"/data/exercise.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Exercise Data Loaded:\", data);\r\n        setExerciseData(data);\r\n      })\r\n      .catch((error) => console.error(\"Error loading exercise data:\", error));\r\n  }, []);\r\n\r\n  // Function to generate chatbot response\r\n  const generateResponse = (userInput) => {\r\n    if (!userInput) return \"I didn't understand that. Please ask again!\";\r\n\r\n    const lowerInput = userInput.toLowerCase(); // Ensure input is lowercase\r\n\r\n    // Check Calories Data\r\n    const foodMatch = caloriesData.find((item) =>\r\n      item.name?.toLowerCase().includes(lowerInput)\r\n    );\r\n\r\n    if (foodMatch) {\r\n      return `A ${foodMatch.name} contains ${foodMatch.calories} calories.`;\r\n    }\r\n\r\n    // Check Exercise Data\r\n    const exerciseMatch = exerciseData.find((item) =>\r\n      item.activity?.toLowerCase().includes(lowerInput)\r\n    );\r\n\r\n    if (exerciseMatch) {\r\n      return `You burn around ${exerciseMatch.calories_burned} calories by doing ${exerciseMatch.activity}.`;\r\n    }\r\n\r\n    return \"I'm sorry, I couldn't find that information.\";\r\n  };\r\n\r\n  // Handle user message send\r\n  const handleSendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    const botMessage = { text: generateResponse(input), sender: \"bot\" };\r\n\r\n    setMessages([...messages, userMessage, botMessage]);\r\n    setInput(\"\"); // Clear input field\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ask me about food or exercise...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}