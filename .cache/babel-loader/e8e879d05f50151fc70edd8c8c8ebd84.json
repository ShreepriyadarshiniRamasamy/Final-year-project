{"ast":null,"code":"import caloriesData from \"../data/calories.json\";\nimport exerciseData from \"../data/exercise.json\";\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n  handleCalorieQuery(weight) {\n    console.log(\"Received weight:\", weight);\n    console.log(\"Exercise Data:\", exerciseData);\n    console.log(\"Calorie Data:\", caloriesData);\n    const user = exerciseData.find(entry => parseFloat(entry.Weight) === weight);\n    if (user) {\n      const userCalories = caloriesData.find(entry => entry.User_ID === user.User_ID);\n      let message;\n      if (userCalories) {\n        message = this.createChatBotMessage(`Based on our data, a person weighing ${weight} kg (User ID: ${user.User_ID}) burned around ${userCalories.Calories} kcal.`);\n      } else {\n        message = this.createChatBotMessage(\"I couldn't find the exact calorie data for your weight. Please provide more details like age and activity level!\");\n      }\n      this.setState(prev => ({\n        ...prev,\n        messages: [...prev.messages, message]\n      }));\n    } else {\n      const message = this.createChatBotMessage(\"Sorry, I couldn't find any matching user data for this weight.\");\n      this.setState(prev => ({\n        ...prev,\n        messages: [...prev.messages, message]\n      }));\n    }\n  }\n}\nexport default ActionProvider;","map":{"version":3,"names":["caloriesData","exerciseData","ActionProvider","constructor","createChatBotMessage","setStateFunc","setState","handleCalorieQuery","weight","console","log","user","find","entry","parseFloat","Weight","userCalories","User_ID","message","Calories","prev","messages"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/chatbot/ActionProvider.js"],"sourcesContent":["import caloriesData from \"../data/calories.json\";\r\nimport exerciseData from \"../data/exercise.json\";\r\n\r\nclass ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n  handleCalorieQuery(weight) {\r\n    console.log(\"Received weight:\", weight);\r\n    console.log(\"Exercise Data:\", exerciseData);\r\n    console.log(\"Calorie Data:\", caloriesData);\r\n\r\n    const user = exerciseData.find(entry => parseFloat(entry.Weight) === weight);\r\n    if (user) {\r\n      const userCalories = caloriesData.find(entry => entry.User_ID === user.User_ID);\r\n\r\n      let message;\r\n      if (userCalories) {\r\n        message = this.createChatBotMessage(\r\n          `Based on our data, a person weighing ${weight} kg (User ID: ${user.User_ID}) burned around ${userCalories.Calories} kcal.`\r\n        );\r\n      } else {\r\n        message = this.createChatBotMessage(\r\n          \"I couldn't find the exact calorie data for your weight. Please provide more details like age and activity level!\"\r\n        );\r\n      }\r\n\r\n      this.setState(prev => ({\r\n        ...prev,\r\n        messages: [...prev.messages, message],\r\n      }));\r\n    } else {\r\n      const message = this.createChatBotMessage(\r\n        \"Sorry, I couldn't find any matching user data for this weight.\"\r\n      );\r\n      this.setState(prev => ({\r\n        ...prev,\r\n        messages: [...prev.messages, message],\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default ActionProvider;\r\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,uBAAuB;AAChD,OAAOC,YAAY,MAAM,uBAAuB;AAEhD,MAAMC,cAAc,CAAC;EACnBC,WAAW,CAACC,oBAAoB,EAAEC,YAAY,EAAE;IAC9C,IAAI,CAACD,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACE,QAAQ,GAAGD,YAAY;EAC9B;EAEAE,kBAAkB,CAACC,MAAM,EAAE;IACzBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,MAAM,CAAC;IACvCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAET,YAAY,CAAC;IAC3CQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEV,YAAY,CAAC;IAE1C,MAAMW,IAAI,GAAGV,YAAY,CAACW,IAAI,CAACC,KAAK,IAAIC,UAAU,CAACD,KAAK,CAACE,MAAM,CAAC,KAAKP,MAAM,CAAC;IAC5E,IAAIG,IAAI,EAAE;MACR,MAAMK,YAAY,GAAGhB,YAAY,CAACY,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACI,OAAO,KAAKN,IAAI,CAACM,OAAO,CAAC;MAE/E,IAAIC,OAAO;MACX,IAAIF,YAAY,EAAE;QAChBE,OAAO,GAAG,IAAI,CAACd,oBAAoB,CAChC,wCAAuCI,MAAO,iBAAgBG,IAAI,CAACM,OAAQ,mBAAkBD,YAAY,CAACG,QAAS,QAAO,CAC5H;MACH,CAAC,MAAM;QACLD,OAAO,GAAG,IAAI,CAACd,oBAAoB,CACjC,kHAAkH,CACnH;MACH;MAEA,IAAI,CAACE,QAAQ,CAACc,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEH,OAAO;MACtC,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACL,MAAMA,OAAO,GAAG,IAAI,CAACd,oBAAoB,CACvC,gEAAgE,CACjE;MACD,IAAI,CAACE,QAAQ,CAACc,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEH,OAAO;MACtC,CAAC,CAAC,CAAC;IACL;EACF;AACF;AAEA,eAAehB,cAAc"},"metadata":{},"sourceType":"module"}