{"ast":null,"code":"class MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n  parse(message) {\n    const lowerCaseMessage = message.toLowerCase();\n\n    // Extract weight (Handles various formats like \"70kg\", \"70 kg\", \"I weigh 70kg\", etc.)\n    const weightMatch = lowerCaseMessage.match(/(\\d+\\.?\\d*)\\s*kg/);\n    const weight = weightMatch ? parseFloat(weightMatch[1]) : null;\n\n    // Extract activity (Basic detection for common exercises)\n    const activityMatch = lowerCaseMessage.match(/\\b(running|walking|cycling|exercise|workout)\\b/);\n    const activity = activityMatch ? activityMatch[1] : null;\n\n    // Extract duration (Handles \"30 min\", \"30 minutes\", etc.)\n    const durationMatch = lowerCaseMessage.match(/(\\d+)\\s*(minutes|min)/);\n    const duration = durationMatch ? parseInt(durationMatch[1]) : null;\n    console.log(`Parsed Data -> Weight: ${weight}, Activity: ${activity}, Duration: ${duration}`);\n\n    // Check for calorie-related queries\n    if (lowerCaseMessage.includes(\"calorie\") || lowerCaseMessage.includes(\"calories\")) {\n      if (weight) {\n        this.actionProvider.handleCalorieQuery(weight);\n      } else {\n        this.actionProvider.handleUnknown();\n      }\n      return;\n    }\n\n    // Check for calorie burn based on activity & duration\n    if (activity && duration) {\n      if (weight) {\n        this.actionProvider.handleExerciseQuery({\n          weight,\n          duration,\n          activity\n        });\n      } else {\n        this.actionProvider.handleUnknown();\n      }\n      return;\n    }\n\n    // Default response if no valid input detected\n    this.actionProvider.handleUnknown();\n  }\n}\nexport default MessageParser;","map":{"version":3,"names":["MessageParser","constructor","actionProvider","parse","message","lowerCaseMessage","toLowerCase","weightMatch","match","weight","parseFloat","activityMatch","activity","durationMatch","duration","parseInt","console","log","includes","handleCalorieQuery","handleUnknown","handleExerciseQuery"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/chatbot/MessageParser.js"],"sourcesContent":["class MessageParser {\r\n  constructor(actionProvider) {\r\n    this.actionProvider = actionProvider;\r\n  }\r\n\r\n  parse(message) {\r\n    const lowerCaseMessage = message.toLowerCase();\r\n\r\n    // Extract weight (Handles various formats like \"70kg\", \"70 kg\", \"I weigh 70kg\", etc.)\r\n    const weightMatch = lowerCaseMessage.match(/(\\d+\\.?\\d*)\\s*kg/);\r\n    const weight = weightMatch ? parseFloat(weightMatch[1]) : null;\r\n\r\n    // Extract activity (Basic detection for common exercises)\r\n    const activityMatch = lowerCaseMessage.match(/\\b(running|walking|cycling|exercise|workout)\\b/);\r\n    const activity = activityMatch ? activityMatch[1] : null;\r\n\r\n    // Extract duration (Handles \"30 min\", \"30 minutes\", etc.)\r\n    const durationMatch = lowerCaseMessage.match(/(\\d+)\\s*(minutes|min)/);\r\n    const duration = durationMatch ? parseInt(durationMatch[1]) : null;\r\n\r\n    console.log(`Parsed Data -> Weight: ${weight}, Activity: ${activity}, Duration: ${duration}`);\r\n\r\n    // Check for calorie-related queries\r\n    if (lowerCaseMessage.includes(\"calorie\") || lowerCaseMessage.includes(\"calories\")) {\r\n      if (weight) {\r\n        this.actionProvider.handleCalorieQuery(weight);\r\n      } else {\r\n        this.actionProvider.handleUnknown();\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Check for calorie burn based on activity & duration\r\n    if (activity && duration) {\r\n      if (weight) {\r\n        this.actionProvider.handleExerciseQuery({ weight, duration, activity });\r\n      } else {\r\n        this.actionProvider.handleUnknown();\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Default response if no valid input detected\r\n    this.actionProvider.handleUnknown();\r\n  }\r\n}\r\n\r\nexport default MessageParser;\r\n"],"mappings":"AAAA,MAAMA,aAAa,CAAC;EAClBC,WAAW,CAACC,cAAc,EAAE;IAC1B,IAAI,CAACA,cAAc,GAAGA,cAAc;EACtC;EAEAC,KAAK,CAACC,OAAO,EAAE;IACb,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,WAAW,EAAE;;IAE9C;IACA,MAAMC,WAAW,GAAGF,gBAAgB,CAACG,KAAK,CAAC,kBAAkB,CAAC;IAC9D,MAAMC,MAAM,GAAGF,WAAW,GAAGG,UAAU,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;;IAE9D;IACA,MAAMI,aAAa,GAAGN,gBAAgB,CAACG,KAAK,CAAC,gDAAgD,CAAC;IAC9F,MAAMI,QAAQ,GAAGD,aAAa,GAAGA,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI;;IAExD;IACA,MAAME,aAAa,GAAGR,gBAAgB,CAACG,KAAK,CAAC,uBAAuB,CAAC;IACrE,MAAMM,QAAQ,GAAGD,aAAa,GAAGE,QAAQ,CAACF,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;IAElEG,OAAO,CAACC,GAAG,CAAE,0BAAyBR,MAAO,eAAcG,QAAS,eAAcE,QAAS,EAAC,CAAC;;IAE7F;IACA,IAAIT,gBAAgB,CAACa,QAAQ,CAAC,SAAS,CAAC,IAAIb,gBAAgB,CAACa,QAAQ,CAAC,UAAU,CAAC,EAAE;MACjF,IAAIT,MAAM,EAAE;QACV,IAAI,CAACP,cAAc,CAACiB,kBAAkB,CAACV,MAAM,CAAC;MAChD,CAAC,MAAM;QACL,IAAI,CAACP,cAAc,CAACkB,aAAa,EAAE;MACrC;MACA;IACF;;IAEA;IACA,IAAIR,QAAQ,IAAIE,QAAQ,EAAE;MACxB,IAAIL,MAAM,EAAE;QACV,IAAI,CAACP,cAAc,CAACmB,mBAAmB,CAAC;UAAEZ,MAAM;UAAEK,QAAQ;UAAEF;QAAS,CAAC,CAAC;MACzE,CAAC,MAAM;QACL,IAAI,CAACV,cAAc,CAACkB,aAAa,EAAE;MACrC;MACA;IACF;;IAEA;IACA,IAAI,CAAClB,cAAc,CAACkB,aAAa,EAAE;EACrC;AACF;AAEA,eAAepB,aAAa"},"metadata":{},"sourceType":"module"}