{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\foods\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodSelector from './../food-selector';\nimport SelectedFood from './../selected-food';\nimport { Icon } from 'antd';\nimport update from 'immutability-helper';\nimport foods from './../../data/foods.json';\nimport { from } from 'rxjs';\nexport default class Foods extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selectedFoods: [],\n      foodsForSelection: []\n    };\n    this.onFoodSelect = selectedFoodName => {\n      this.setState({\n        selectedFoods: [...this.state.selectedFoods, {\n          food: foods.find(f => f.name === selectedFoodName),\n          amount: foods.find(f => f.name === selectedFoodName).serving || 100\n        }]\n      }, () => {\n        this.props.updateNutrients(from(this.state.selectedFoods));\n        this.updateFoodSelector();\n      });\n    };\n    this.onFoodRemove = removedFood => {\n      const removedFoodIndex = this.findFoodIndex(removedFood.food.name);\n      const updatedSelectedFoods = update(this.state.selectedFoods, {\n        $splice: [[removedFoodIndex, 1]]\n      });\n      this.setState({\n        selectedFoods: updatedSelectedFoods\n      }, () => {\n        this.props.updateNutrients(from(this.state.selectedFoods));\n        this.updateFoodSelector();\n      });\n    };\n    this.findFoodIndex = foodName => this.state.selectedFoods.findIndex(f => f.food.name === foodName);\n    this.onFoodAmountChange = updatedSelectedFood => {\n      const updatedFoodIndex = this.findFoodIndex(updatedSelectedFood.food.name);\n      const updatedSelectedFoods = update(this.state.selectedFoods, {\n        $splice: [[updatedFoodIndex, 1, updatedSelectedFood]]\n      });\n      this.setState({\n        selectedFoods: updatedSelectedFoods\n      }, () => {\n        this.props.updateNutrients(from(this.state.selectedFoods));\n      });\n    };\n    this.updateFoodSelector = () => {\n      const allPossibleFoods = foods.map(food => food.name);\n      const allSelectedFoods = this.state.selectedFoods.map(sf => sf.food.name);\n      this.setState({\n        foodsForSelection: allPossibleFoods.filter(f => !allSelectedFoods.includes(f))\n      });\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      foodsForSelection: foods.map(food => food.name)\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FoodSelector, {\n      className: \"foodSelector\",\n      foods: this.state.foodsForSelection,\n      onChange: this.onFoodSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), this.state.selectedFoods.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addFoods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"animate-flicker\",\n      type: \"arrow-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })), this.state.selectedFoods.length > 0 && /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"selectedFoodsLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \" Selected foods \"), this.state.selectedFoods.map(selectedFood => /*#__PURE__*/React.createElement(SelectedFood, {\n      key: selectedFood.food.name,\n      selectedFood: selectedFood,\n      onChange: this.onFoodAmountChange,\n      onRemove: this.onFoodRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })));\n  }\n}\nFoods.propTypes = {\n  updateNutrients: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","FoodSelector","SelectedFood","Icon","update","foods","from","Foods","state","selectedFoods","foodsForSelection","onFoodSelect","selectedFoodName","setState","food","find","f","name","amount","serving","props","updateNutrients","updateFoodSelector","onFoodRemove","removedFood","removedFoodIndex","findFoodIndex","updatedSelectedFoods","$splice","foodName","findIndex","onFoodAmountChange","updatedSelectedFood","updatedFoodIndex","allPossibleFoods","map","allSelectedFoods","sf","filter","includes","componentDidMount","render","length","selectedFood","propTypes","func","isRequired"],"sources":["C:/project/Food/food-nutrients Phase-II/src/components/foods/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport FoodSelector from './../food-selector'\nimport SelectedFood from './../selected-food'\nimport { Icon } from 'antd'\nimport update from 'immutability-helper'\nimport foods from './../../data/foods.json'\nimport { from } from 'rxjs'\n\nexport default class Foods extends Component {\n  static propTypes = {\n    updateNutrients: PropTypes.func.isRequired,\n  }\n  state = {\n    selectedFoods: [],\n    foodsForSelection: [],\n  }\n  onFoodSelect = selectedFoodName => {\n    this.setState(\n      {\n        selectedFoods: [\n          ...this.state.selectedFoods,\n          {\n            food: foods.find(f => f.name === selectedFoodName),\n            amount: foods.find(f => f.name === selectedFoodName).serving || 100,\n          },\n        ],\n      },\n      () => {\n        this.props.updateNutrients(from(this.state.selectedFoods))\n        this.updateFoodSelector()\n      },\n    )\n  }\n\n  onFoodRemove = removedFood => {\n    const removedFoodIndex = this.findFoodIndex(removedFood.food.name)\n    const updatedSelectedFoods = update(this.state.selectedFoods, {\n      $splice: [[removedFoodIndex, 1]],\n    })\n    this.setState(\n      {\n        selectedFoods: updatedSelectedFoods,\n      },\n      () => {\n        this.props.updateNutrients(from(this.state.selectedFoods))\n        this.updateFoodSelector()\n      },\n    )\n  }\n  findFoodIndex = foodName => this.state.selectedFoods.findIndex(f => f.food.name === foodName)\n  onFoodAmountChange = updatedSelectedFood => {\n    const updatedFoodIndex = this.findFoodIndex(updatedSelectedFood.food.name)\n    const updatedSelectedFoods = update(this.state.selectedFoods, {\n      $splice: [[updatedFoodIndex, 1, updatedSelectedFood]],\n    })\n    this.setState({ selectedFoods: updatedSelectedFoods }, () => {\n      this.props.updateNutrients(from(this.state.selectedFoods))\n    })\n  }\n  updateFoodSelector = () => {\n    const allPossibleFoods = foods.map(food => food.name)\n    const allSelectedFoods = this.state.selectedFoods.map(sf => sf.food.name)\n    this.setState({\n      foodsForSelection: allPossibleFoods.filter(f => !allSelectedFoods.includes(f)),\n    })\n  }\n  componentDidMount() {\n    this.setState({ foodsForSelection: foods.map(food => food.name) })\n  }\n  render() {\n    return (\n      <div>\n        <FoodSelector\n          className=\"foodSelector\"\n          foods={this.state.foodsForSelection}\n          onChange={this.onFoodSelect}\n        />\n        {this.state.selectedFoods.length === 0 && (\n          <div className=\"addFoods\">\n            <Icon className=\"animate-flicker\" type=\"arrow-up\" />\n          </div>\n        )}\n        {this.state.selectedFoods.length > 0 && (\n          <h3 className=\"selectedFoodsLabel\"> Selected foods </h3>\n        )}\n        {this.state.selectedFoods.map(selectedFood => (\n          <SelectedFood\n            key={selectedFood.food.name}\n            selectedFood={selectedFood}\n            onChange={this.onFoodAmountChange}\n            onRemove={this.onFoodRemove}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}