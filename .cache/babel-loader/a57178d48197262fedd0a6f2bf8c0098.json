{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [caloriesData, setCaloriesData] = useState([]);\n  const [exerciseData, setExerciseData] = useState([]);\n\n  // Load JSON data from the public folder\n  useEffect(() => {\n    fetch(\"/data/calories.json\").then(response => response.json()).then(data => {\n      setCaloriesData(data);\n      console.log(\"Calories Data Loaded:\", data.length);\n    }).catch(error => console.error(\"Error loading calories data:\", error));\n    fetch(\"/data/exercise.json\").then(response => response.json()).then(data => {\n      setExerciseData(data);\n      console.log(\"Exercise Data Loaded:\", data.length);\n    }).catch(error => console.error(\"Error loading exercise data:\", error));\n  }, []);\n\n  // Function to generate chatbot responses\n  const generateResponse = userInput => {\n    if (!userInput) return \"Please enter a valid query.\";\n\n    // Ensure the data is loaded\n    if (!caloriesData.length || !exerciseData.length) {\n      return \"Data not loaded properly. Please try again later.\";\n    }\n\n    // Find food item in calories data\n    const foodItem = caloriesData.find(item => item.name && item.name.toLowerCase() === userInput.toLowerCase());\n    if (foodItem) {\n      return `A ${foodItem.name} contains ${foodItem.calories} calories.`;\n    }\n\n    // Find exercise in exercise data\n    const exerciseItem = exerciseData.find(item => item.name && item.name.toLowerCase() === userInput.toLowerCase());\n    if (exerciseItem) {\n      return `You burn ${exerciseItem.calories_burned} calories by doing ${exerciseItem.name}.`;\n    }\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise.\";\n  };\n\n  // Handle user input submission\n  const handleSendMessage = () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    const botResponse = {\n      text: generateResponse(input),\n      sender: \"bot\"\n    };\n    setMessages([...messages, userMessage, botResponse]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `message ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, msg.text))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Ask me about food or exercise...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n}\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","Chatbot","messages","setMessages","input","setInput","caloriesData","setCaloriesData","exerciseData","setExerciseData","fetch","then","response","json","data","console","log","length","catch","error","generateResponse","userInput","foodItem","find","item","name","toLowerCase","calories","exerciseItem","calories_burned","handleSendMessage","trim","userMessage","text","sender","botResponse","map","msg","index","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [caloriesData, setCaloriesData] = useState([]);\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n\r\n  // Load JSON data from the public folder\r\n  useEffect(() => {\r\n    fetch(\"/data/calories.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCaloriesData(data);\r\n        console.log(\"Calories Data Loaded:\", data.length);\r\n      })\r\n      .catch((error) => console.error(\"Error loading calories data:\", error));\r\n\r\n    fetch(\"/data/exercise.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setExerciseData(data);\r\n        console.log(\"Exercise Data Loaded:\", data.length);\r\n      })\r\n      .catch((error) => console.error(\"Error loading exercise data:\", error));\r\n  }, []);\r\n\r\n  // Function to generate chatbot responses\r\n  const generateResponse = (userInput) => {\r\n    if (!userInput) return \"Please enter a valid query.\";\r\n\r\n    // Ensure the data is loaded\r\n    if (!caloriesData.length || !exerciseData.length) {\r\n      return \"Data not loaded properly. Please try again later.\";\r\n    }\r\n\r\n    // Find food item in calories data\r\n    const foodItem = caloriesData.find(\r\n      (item) => item.name && item.name.toLowerCase() === userInput.toLowerCase()\r\n    );\r\n\r\n    if (foodItem) {\r\n      return `A ${foodItem.name} contains ${foodItem.calories} calories.`;\r\n    }\r\n\r\n    // Find exercise in exercise data\r\n    const exerciseItem = exerciseData.find(\r\n      (item) =>\r\n        item.name && item.name.toLowerCase() === userInput.toLowerCase()\r\n    );\r\n\r\n    if (exerciseItem) {\r\n      return `You burn ${exerciseItem.calories_burned} calories by doing ${exerciseItem.name}.`;\r\n    }\r\n\r\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise.\";\r\n  };\r\n\r\n  // Handle user input submission\r\n  const handleSendMessage = () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    const botResponse = { text: generateResponse(input), sender: \"bot\" };\r\n\r\n    setMessages([...messages, userMessage, botResponse]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Ask me about food or exercise...\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}