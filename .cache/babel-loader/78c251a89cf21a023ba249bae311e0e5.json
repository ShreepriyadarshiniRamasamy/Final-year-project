{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([{\n    text: \"Hello! Ask me about food nutrition or exercises.\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [caloriesData, setCaloriesData] = useState(null);\n  const [exerciseData, setExerciseData] = useState(null);\n\n  // Load JSON Data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const caloriesResponse = await fetch(`${process.env.PUBLIC_URL}/data/calories.json`);\n        const exerciseResponse = await fetch(`${process.env.PUBLIC_URL}/data/exercise.json`);\n        if (!caloriesResponse.ok || !exerciseResponse.ok) {\n          throw new Error(\"Failed to load JSON files\");\n        }\n        const caloriesJson = await caloriesResponse.json();\n        const exerciseJson = await exerciseResponse.json();\n        setCaloriesData(caloriesJson);\n        setExerciseData(exerciseJson);\n      } catch (error) {\n        console.error(\"Error loading JSON data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Function to handle user input\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages([...messages, userMessage]);\n\n    // Process the input\n    const botResponse = generateResponse(input);\n    setTimeout(() => setMessages([...messages, userMessage, {\n      text: botResponse,\n      sender: \"bot\"\n    }]), 500);\n    setInput(\"\");\n  };\n\n  // Function to generate bot response\n  const generateResponse = query => {\n    query = query.toLowerCase();\n    if (!caloriesData || !exerciseData) {\n      return \"I'm still loading the data. Please try again in a few seconds.\";\n    }\n\n    // Search for food calories\n    const foodItem = caloriesData.find(food => query.includes(food.name.toLowerCase()));\n    if (foodItem) {\n      return `The food '${foodItem.name}' contains ${foodItem.calories} calories per ${foodItem.serving_size}.`;\n    }\n\n    // Search for exercise calories burned\n    const exerciseItem = exerciseData.find(exercise => query.includes(exercise.name.toLowerCase()));\n    if (exerciseItem) {\n      return `The activity '${exerciseItem.name}' burns around ${exerciseItem.calories_burned} calories per ${exerciseItem.duration}.`;\n    }\n    return \"I couldn't find the information you're looking for. Try asking about a food item or exercise.\";\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `chat-message ${msg.sender}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, msg.text))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ask about food or exercise...\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","Chatbot","messages","setMessages","text","sender","input","setInput","caloriesData","setCaloriesData","exerciseData","setExerciseData","fetchData","caloriesResponse","fetch","process","env","PUBLIC_URL","exerciseResponse","ok","Error","caloriesJson","json","exerciseJson","error","console","handleSendMessage","trim","userMessage","botResponse","generateResponse","setTimeout","query","toLowerCase","foodItem","find","food","includes","name","calories","serving_size","exerciseItem","exercise","calories_burned","duration","map","msg","index","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([{ text: \"Hello! Ask me about food nutrition or exercises.\", sender: \"bot\" }]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [caloriesData, setCaloriesData] = useState(null);\r\n  const [exerciseData, setExerciseData] = useState(null);\r\n\r\n  // Load JSON Data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const caloriesResponse = await fetch(`${process.env.PUBLIC_URL}/data/calories.json`);\r\n        const exerciseResponse = await fetch(`${process.env.PUBLIC_URL}/data/exercise.json`);\r\n        \r\n        if (!caloriesResponse.ok || !exerciseResponse.ok) {\r\n          throw new Error(\"Failed to load JSON files\");\r\n        }\r\n\r\n        const caloriesJson = await caloriesResponse.json();\r\n        const exerciseJson = await exerciseResponse.json();\r\n\r\n        setCaloriesData(caloriesJson);\r\n        setExerciseData(exerciseJson);\r\n      } catch (error) {\r\n        console.error(\"Error loading JSON data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Function to handle user input\r\n  const handleSendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    // Process the input\r\n    const botResponse = generateResponse(input);\r\n    setTimeout(() => setMessages([...messages, userMessage, { text: botResponse, sender: \"bot\" }]), 500);\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  // Function to generate bot response\r\n  const generateResponse = (query) => {\r\n    query = query.toLowerCase();\r\n\r\n    if (!caloriesData || !exerciseData) {\r\n      return \"I'm still loading the data. Please try again in a few seconds.\";\r\n    }\r\n\r\n    // Search for food calories\r\n    const foodItem = caloriesData.find(food => query.includes(food.name.toLowerCase()));\r\n    if (foodItem) {\r\n      return `The food '${foodItem.name}' contains ${foodItem.calories} calories per ${foodItem.serving_size}.`;\r\n    }\r\n\r\n    // Search for exercise calories burned\r\n    const exerciseItem = exerciseData.find(exercise => query.includes(exercise.name.toLowerCase()));\r\n    if (exerciseItem) {\r\n      return `The activity '${exerciseItem.name}' burns around ${exerciseItem.calories_burned} calories per ${exerciseItem.duration}.`;\r\n    }\r\n\r\n    return \"I couldn't find the information you're looking for. Try asking about a food item or exercise.\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ask about food or exercise...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}