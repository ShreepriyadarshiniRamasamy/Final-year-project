{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { from } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport MacroNutrients from \"./components/macro-nutrients\";\nimport MicroNutrients from \"./components/micro-nutrients\";\nimport ChatbotComponent from \"./components/chatbot/Chatbot\";\nimport initTutorial from \"./components/tutorial\";\nimport Foods from \"./components/foods\";\nimport { calculateMacroNutrients, calculateMicroNutrients } from \"./components/calculations\";\nimport logo from \"./imgs/logo.png\";\n\n// Importing styles\nimport \"./App.css\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      caloriesData: null,\n      exerciseData: null,\n      macroNutrients: null,\n      microNutrients: null\n    };\n    this.nutrients$ = from(require(\"./data/nutrients.json\"));\n    this.nutrientsLimited$ = this.nutrients$.pipe(map(nutrient => ({\n      name: nutrient.name,\n      rda: nutrient.rda\n    })));\n    this.updateNutrients = selectedFoods$ => {\n      this.setState({\n        macroNutrients: calculateMacroNutrients(selectedFoods$),\n        microNutrients: calculateMicroNutrients(selectedFoods$, this.nutrientsLimited$)\n      });\n    };\n  }\n  async componentDidMount() {\n    initTutorial();\n\n    // Fetching JSON files dynamically\n    try {\n      const caloriesResponse = await fetch(process.env.PUBLIC_URL + \"/data/calories.json\");\n      const exerciseResponse = await fetch(process.env.PUBLIC_URL + \"/data/exercise.json\");\n      if (!caloriesResponse.ok || !exerciseResponse.ok) {\n        throw new Error(\"Failed to load JSON files\");\n      }\n      const caloriesData = await caloriesResponse.json();\n      const exerciseData = await exerciseResponse.json();\n      console.log(\"Calories Data:\", caloriesData);\n      console.log(\"Exercise Data:\", exerciseData);\n      this.setState({\n        caloriesData,\n        exerciseData\n      });\n    } catch (error) {\n      console.error(\"Error fetching JSON:\", error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Logo\",\n      src: logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Foods, {\n      updateNutrients: this.updateNutrients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MacroNutrients, {\n      macroNutrients: this.state.macroNutrients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MicroNutrients, {\n      definitions: require(\"./data/nutrients.json\"),\n      microNutrients: this.state.microNutrients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ChatbotComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"names":["React","Component","from","map","MacroNutrients","MicroNutrients","ChatbotComponent","initTutorial","Foods","calculateMacroNutrients","calculateMicroNutrients","logo","App","state","caloriesData","exerciseData","macroNutrients","microNutrients","nutrients$","require","nutrientsLimited$","pipe","nutrient","name","rda","updateNutrients","selectedFoods$","setState","componentDidMount","caloriesResponse","fetch","process","env","PUBLIC_URL","exerciseResponse","ok","Error","json","console","log","error","render"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { from } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport MacroNutrients from \"./components/macro-nutrients\";\nimport MicroNutrients from \"./components/micro-nutrients\";\nimport ChatbotComponent from \"./components/chatbot/Chatbot\";\n\nimport initTutorial from \"./components/tutorial\";\nimport Foods from \"./components/foods\";\nimport { calculateMacroNutrients, calculateMicroNutrients } from \"./components/calculations\";\n\nimport logo from \"./imgs/logo.png\";\n\n// Importing styles\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    caloriesData: null,\n    exerciseData: null,\n    macroNutrients: null,\n    microNutrients: null,\n  };\n\n  nutrients$ = from(require(\"./data/nutrients.json\"));\n  nutrientsLimited$ = this.nutrients$.pipe(\n    map((nutrient) => ({\n      name: nutrient.name,\n      rda: nutrient.rda,\n    }))\n  );\n\n  updateNutrients = (selectedFoods$) => {\n    this.setState({\n      macroNutrients: calculateMacroNutrients(selectedFoods$),\n      microNutrients: calculateMicroNutrients(selectedFoods$, this.nutrientsLimited$),\n    });\n  };\n\n  async componentDidMount() {\n    initTutorial();\n\n    // Fetching JSON files dynamically\n    try {\n      const caloriesResponse = await fetch(process.env.PUBLIC_URL + \"/data/calories.json\");\n      const exerciseResponse = await fetch(process.env.PUBLIC_URL + \"/data/exercise.json\");\n\n      if (!caloriesResponse.ok || !exerciseResponse.ok) {\n        throw new Error(\"Failed to load JSON files\");\n      }\n\n      const caloriesData = await caloriesResponse.json();\n      const exerciseData = await exerciseResponse.json();\n\n      console.log(\"Calories Data:\", caloriesData);\n      console.log(\"Exercise Data:\", exerciseData);\n\n      this.setState({ caloriesData, exerciseData });\n    } catch (error) {\n      console.error(\"Error fetching JSON:\", error);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"leftPanel\">\n          <div className=\"logo\">\n            <img alt=\"Logo\" src={logo} />\n          </div>\n          <Foods updateNutrients={this.updateNutrients} />\n        </div>\n        <div className=\"rightPanel\">\n          <MacroNutrients macroNutrients={this.state.macroNutrients} />\n          <MicroNutrients definitions={require(\"./data/nutrients.json\")} microNutrients={this.state.microNutrients} />\n        </div>\n        {/* Adding the Chatbot component */}\n        <ChatbotComponent />\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}