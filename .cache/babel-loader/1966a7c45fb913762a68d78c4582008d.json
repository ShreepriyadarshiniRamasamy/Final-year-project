{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [caloriesData, setCaloriesData] = useState([]);\n  const [exerciseData, setExerciseData] = useState([]);\n  useEffect(() => {\n    // Fetch the JSON data from public folder\n    fetch(\"/data/calories.json\").then(response => response.json()).then(data => {\n      console.log(\"Calories Data Loaded:\", data.length);\n      setCaloriesData(data);\n    });\n    fetch(\"/data/exercise.json\").then(response => response.json()).then(data => {\n      console.log(\"Exercise Data Loaded:\", data.length);\n      setExerciseData(data);\n    });\n  }, []);\n\n  // Extract keywords (food or exercise name) from user input\n  function extractKeyword(userInput) {\n    if (!userInput) return null;\n    const words = userInput.toLowerCase().split(\" \");\n\n    // Search for food names in the calories dataset\n    const foodItem = caloriesData.find(item => words.includes(item.food.toLowerCase()));\n\n    // Search for exercise names in the exercise dataset\n    const exerciseItem = exerciseData.find(item => words.includes(item.exercise.toLowerCase()));\n    return foodItem || exerciseItem || null;\n  }\n  function generateResponse(userInput) {\n    if (!userInput) return \"I'm sorry, I didn't understand that.\";\n    const matchedItem = extractKeyword(userInput);\n    if (matchedItem) {\n      if (matchedItem.food) {\n        return `An ${matchedItem.food} has ${matchedItem.calories} calories.`;\n      } else if (matchedItem.exercise) {\n        return `Doing ${matchedItem.exercise} for ${matchedItem.duration} minutes burns around ${matchedItem.calories_burned} calories.`;\n      }\n    }\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise.\";\n  }\n  function handleSendMessage() {\n    if (!input.trim()) return;\n    const response = generateResponse(input);\n    setMessages([...messages, {\n      text: input,\n      type: \"user\"\n    }, {\n      text: response,\n      type: \"bot\"\n    }]);\n    setInput(\"\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Nutrition & Fitness Chatbot\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"1px solid #ddd\",\n      padding: \"10px\",\n      height: \"300px\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      textAlign: msg.type === \"user\" ? \"right\" : \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, msg.text)))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Ask about food or exercise...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n}\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","Chatbot","messages","setMessages","input","setInput","caloriesData","setCaloriesData","exerciseData","setExerciseData","fetch","then","response","json","data","console","log","length","extractKeyword","userInput","words","toLowerCase","split","foodItem","find","item","includes","food","exerciseItem","exercise","generateResponse","matchedItem","calories","duration","calories_burned","handleSendMessage","trim","text","type","border","padding","height","overflowY","map","msg","index","textAlign","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [caloriesData, setCaloriesData] = useState([]);\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the JSON data from public folder\r\n    fetch(\"/data/calories.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Calories Data Loaded:\", data.length);\r\n        setCaloriesData(data);\r\n      });\r\n\r\n    fetch(\"/data/exercise.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Exercise Data Loaded:\", data.length);\r\n        setExerciseData(data);\r\n      });\r\n  }, []);\r\n\r\n  // Extract keywords (food or exercise name) from user input\r\n  function extractKeyword(userInput) {\r\n    if (!userInput) return null;\r\n\r\n    const words = userInput.toLowerCase().split(\" \");\r\n    \r\n    // Search for food names in the calories dataset\r\n    const foodItem = caloriesData.find((item) =>\r\n      words.includes(item.food.toLowerCase())\r\n    );\r\n\r\n    // Search for exercise names in the exercise dataset\r\n    const exerciseItem = exerciseData.find((item) =>\r\n      words.includes(item.exercise.toLowerCase())\r\n    );\r\n\r\n    return foodItem || exerciseItem || null;\r\n  }\r\n\r\n  function generateResponse(userInput) {\r\n    if (!userInput) return \"I'm sorry, I didn't understand that.\";\r\n\r\n    const matchedItem = extractKeyword(userInput);\r\n\r\n    if (matchedItem) {\r\n      if (matchedItem.food) {\r\n        return `An ${matchedItem.food} has ${matchedItem.calories} calories.`;\r\n      } else if (matchedItem.exercise) {\r\n        return `Doing ${matchedItem.exercise} for ${matchedItem.duration} minutes burns around ${matchedItem.calories_burned} calories.`;\r\n      }\r\n    }\r\n\r\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise.\";\r\n  }\r\n\r\n  function handleSendMessage() {\r\n    if (!input.trim()) return;\r\n\r\n    const response = generateResponse(input);\r\n    setMessages([...messages, { text: input, type: \"user\" }, { text: response, type: \"bot\" }]);\r\n    setInput(\"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Nutrition & Fitness Chatbot</h2>\r\n      <div style={{ border: \"1px solid #ddd\", padding: \"10px\", height: \"300px\", overflowY: \"scroll\" }}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={{ textAlign: msg.type === \"user\" ? \"right\" : \"left\" }}>\r\n            <p>{msg.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder=\"Ask about food or exercise...\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}