{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState } from \"react\";\nimport caloriesData from \"../data/calories.json\"; // Adjusted path\nimport exerciseData from \"../data/exercise.json\"; // Adjusted path\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  // Function to generate chatbot response\n  const generateResponse = userMessage => {\n    const lowerCaseMessage = userMessage.toLowerCase();\n\n    // Check if the message is about food\n    const foodItem = caloriesData.find(item => item.food.toLowerCase() === lowerCaseMessage);\n    if (foodItem) {\n      return `The food '${foodItem.food}' contains ${foodItem.calories} calories.`;\n    }\n\n    // Check if the message is about exercise\n    const exerciseItem = exerciseData.find(item => item.activity.toLowerCase() === lowerCaseMessage);\n    if (exerciseItem) {\n      return `The activity '${exerciseItem.activity}' burns approximately ${exerciseItem.calories_burned} calories.`;\n    }\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise.\";\n  };\n\n  // Handle message send\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    const botResponse = {\n      text: generateResponse(input),\n      sender: \"bot\"\n    };\n    setMessages([...messages, userMessage, botResponse]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: msg.sender === \"user\" ? \"user-msg\" : \"bot-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, msg.text))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Ask me about food or exercise...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","caloriesData","exerciseData","Chatbot","messages","setMessages","input","setInput","generateResponse","userMessage","lowerCaseMessage","toLowerCase","foodItem","find","item","food","calories","exerciseItem","activity","calories_burned","handleSendMessage","trim","text","sender","botResponse","map","msg","index","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport caloriesData from \"../data/calories.json\";  // Adjusted path\r\nimport exerciseData from \"../data/exercise.json\";  // Adjusted path\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // Function to generate chatbot response\r\n  const generateResponse = (userMessage) => {\r\n    const lowerCaseMessage = userMessage.toLowerCase();\r\n    \r\n    // Check if the message is about food\r\n    const foodItem = caloriesData.find(item => \r\n      item.food.toLowerCase() === lowerCaseMessage\r\n    );\r\n\r\n    if (foodItem) {\r\n      return `The food '${foodItem.food}' contains ${foodItem.calories} calories.`;\r\n    }\r\n\r\n    // Check if the message is about exercise\r\n    const exerciseItem = exerciseData.find(item => \r\n      item.activity.toLowerCase() === lowerCaseMessage\r\n    );\r\n\r\n    if (exerciseItem) {\r\n      return `The activity '${exerciseItem.activity}' burns approximately ${exerciseItem.calories_burned} calories.`;\r\n    }\r\n\r\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise.\";\r\n  };\r\n\r\n  // Handle message send\r\n  const handleSendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    const botResponse = { text: generateResponse(input), sender: \"bot\" };\r\n\r\n    setMessages([...messages, userMessage, botResponse]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbox\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={msg.sender === \"user\" ? \"user-msg\" : \"bot-msg\"}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input \r\n        type=\"text\" \r\n        value={input} \r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder=\"Ask me about food or exercise...\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,uBAAuB,CAAC,CAAE;AACnD,OAAOC,YAAY,MAAM,uBAAuB,CAAC,CAAE;;AAEnD,MAAMC,OAAO,GAAG,MAAM;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMQ,gBAAgB,GAAIC,WAAW,IAAK;IACxC,MAAMC,gBAAgB,GAAGD,WAAW,CAACE,WAAW,EAAE;;IAElD;IACA,MAAMC,QAAQ,GAAGX,YAAY,CAACY,IAAI,CAACC,IAAI,IACrCA,IAAI,CAACC,IAAI,CAACJ,WAAW,EAAE,KAAKD,gBAAgB,CAC7C;IAED,IAAIE,QAAQ,EAAE;MACZ,OAAQ,aAAYA,QAAQ,CAACG,IAAK,cAAaH,QAAQ,CAACI,QAAS,YAAW;IAC9E;;IAEA;IACA,MAAMC,YAAY,GAAGf,YAAY,CAACW,IAAI,CAACC,IAAI,IACzCA,IAAI,CAACI,QAAQ,CAACP,WAAW,EAAE,KAAKD,gBAAgB,CACjD;IAED,IAAIO,YAAY,EAAE;MAChB,OAAQ,iBAAgBA,YAAY,CAACC,QAAS,yBAAwBD,YAAY,CAACE,eAAgB,YAAW;IAChH;IAEA,OAAO,6EAA6E;EACtF,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAM;IAC9B,IAAI,CAACd,KAAK,CAACe,IAAI,EAAE,EAAE;IAEnB,MAAMZ,WAAW,GAAG;MAAEa,IAAI,EAAEhB,KAAK;MAAEiB,MAAM,EAAE;IAAO,CAAC;IACnD,MAAMC,WAAW,GAAG;MAAEF,IAAI,EAAEd,gBAAgB,CAACF,KAAK,CAAC;MAAEiB,MAAM,EAAE;IAAM,CAAC;IAEpElB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,WAAW,EAAEe,WAAW,CAAC,CAAC;IACpDjB,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChC;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrBH,QAAQ,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB;IAAK,GAAG,EAAEA,KAAM;IAAC,SAAS,EAAED,GAAG,CAACH,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxEG,GAAG,CAACJ,IAAI,CAEZ,CAAC,CACE,eACN;IACE,IAAI,EAAC,MAAM;IACX,KAAK,EAAEhB,KAAM;IACb,QAAQ,EAAGsB,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAC1C,WAAW,EAAC,kCAAkC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC9C,eACF;IAAQ,OAAO,EAAEV,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,MAAI,CAAS,CAC7C;AAEV,CAAC;AAED,eAAejB,OAAO"},"metadata":{},"sourceType":"module"}