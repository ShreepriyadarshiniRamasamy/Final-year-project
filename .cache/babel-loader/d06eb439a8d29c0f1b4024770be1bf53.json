{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n  async handleCalorieQuery(weight) {\n    console.log(\"Received weight:\", weight);\n    try {\n      const caloriesResponse = await fetch(process.env.PUBLIC_URL + \"/data/calories.json\");\n      const exerciseResponse = await fetch(process.env.PUBLIC_URL + \"/data/exercise.json\");\n      if (!caloriesResponse.ok || !exerciseResponse.ok) {\n        throw new Error(\"Failed to load JSON data\");\n      }\n      const caloriesData = await caloriesResponse.json();\n      const exerciseData = await exerciseResponse.json();\n      console.log(\"Exercise Data:\", exerciseData);\n      console.log(\"Calorie Data:\", caloriesData);\n\n      // Find user data based on weight\n      const user = exerciseData.find(entry => parseFloat(entry.Weight) === parseFloat(weight));\n      let message;\n      if (user) {\n        const userCalories = caloriesData.find(entry => entry.User_ID === user.User_ID);\n        if (userCalories) {\n          message = this.createChatBotMessage(`Based on our data, a person weighing ${weight} kg (User ID: ${user.User_ID}) burned around ${userCalories.Calories} kcal.`);\n        } else {\n          message = this.createChatBotMessage(\"I couldn't find exact calorie data for your weight. Please provide more details like age and activity level!\");\n        }\n      } else {\n        message = this.createChatBotMessage(\"Sorry, I couldn't find any matching user data for this weight.\");\n      }\n      this.setState(prev => ({\n        ...prev,\n        messages: [...prev.messages, message]\n      }));\n    } catch (error) {\n      console.error(\"Error loading JSON files:\", error);\n      const errorMessage = this.createChatBotMessage(\"Error loading data. Please try again later.\");\n      this.setState(prev => ({\n        ...prev,\n        messages: [...prev.messages, errorMessage]\n      }));\n    }\n  }\n}\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","setState","handleCalorieQuery","weight","console","log","caloriesResponse","fetch","process","env","PUBLIC_URL","exerciseResponse","ok","Error","caloriesData","json","exerciseData","user","find","entry","parseFloat","Weight","message","userCalories","User_ID","Calories","prev","messages","error","errorMessage"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/chatbot/ActionProvider.js"],"sourcesContent":["class ActionProvider {\r\n  constructor(createChatBotMessage, setStateFunc) {\r\n    this.createChatBotMessage = createChatBotMessage;\r\n    this.setState = setStateFunc;\r\n  }\r\n\r\n  async handleCalorieQuery(weight) {\r\n    console.log(\"Received weight:\", weight);\r\n\r\n    try {\r\n      const caloriesResponse = await fetch(process.env.PUBLIC_URL + \"/data/calories.json\");\r\nconst exerciseResponse = await fetch(process.env.PUBLIC_URL + \"/data/exercise.json\");\r\n\r\n\r\n      if (!caloriesResponse.ok || !exerciseResponse.ok) {\r\n        throw new Error(\"Failed to load JSON data\");\r\n      }\r\n\r\n      const caloriesData = await caloriesResponse.json();\r\n      const exerciseData = await exerciseResponse.json();\r\n\r\n      console.log(\"Exercise Data:\", exerciseData);\r\n      console.log(\"Calorie Data:\", caloriesData);\r\n\r\n      // Find user data based on weight\r\n      const user = exerciseData.find(entry => parseFloat(entry.Weight) === parseFloat(weight));\r\n\r\n      let message;\r\n      if (user) {\r\n        const userCalories = caloriesData.find(entry => entry.User_ID === user.User_ID);\r\n        if (userCalories) {\r\n          message = this.createChatBotMessage(\r\n            `Based on our data, a person weighing ${weight} kg (User ID: ${user.User_ID}) burned around ${userCalories.Calories} kcal.`\r\n          );\r\n        } else {\r\n          message = this.createChatBotMessage(\r\n            \"I couldn't find exact calorie data for your weight. Please provide more details like age and activity level!\"\r\n          );\r\n        }\r\n      } else {\r\n        message = this.createChatBotMessage(\r\n          \"Sorry, I couldn't find any matching user data for this weight.\"\r\n        );\r\n      }\r\n\r\n      this.setState(prev => ({\r\n        ...prev,\r\n        messages: [...prev.messages, message],\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error loading JSON files:\", error);\r\n      const errorMessage = this.createChatBotMessage(\"Error loading data. Please try again later.\");\r\n      this.setState(prev => ({\r\n        ...prev,\r\n        messages: [...prev.messages, errorMessage],\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default ActionProvider;\r\n"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACnBC,WAAW,CAACC,oBAAoB,EAAEC,YAAY,EAAE;IAC9C,IAAI,CAACD,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACE,QAAQ,GAAGD,YAAY;EAC9B;EAEA,MAAME,kBAAkB,CAACC,MAAM,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,MAAM,CAAC;IAEvC,IAAI;MACF,MAAMG,gBAAgB,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,qBAAqB,CAAC;MAC1F,MAAMC,gBAAgB,GAAG,MAAMJ,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,qBAAqB,CAAC;MAG9E,IAAI,CAACJ,gBAAgB,CAACM,EAAE,IAAI,CAACD,gBAAgB,CAACC,EAAE,EAAE;QAChD,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEA,MAAMC,YAAY,GAAG,MAAMR,gBAAgB,CAACS,IAAI,EAAE;MAClD,MAAMC,YAAY,GAAG,MAAML,gBAAgB,CAACI,IAAI,EAAE;MAElDX,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEW,YAAY,CAAC;MAC3CZ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAES,YAAY,CAAC;;MAE1C;MACA,MAAMG,IAAI,GAAGD,YAAY,CAACE,IAAI,CAACC,KAAK,IAAIC,UAAU,CAACD,KAAK,CAACE,MAAM,CAAC,KAAKD,UAAU,CAACjB,MAAM,CAAC,CAAC;MAExF,IAAImB,OAAO;MACX,IAAIL,IAAI,EAAE;QACR,MAAMM,YAAY,GAAGT,YAAY,CAACI,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACK,OAAO,KAAKP,IAAI,CAACO,OAAO,CAAC;QAC/E,IAAID,YAAY,EAAE;UAChBD,OAAO,GAAG,IAAI,CAACvB,oBAAoB,CAChC,wCAAuCI,MAAO,iBAAgBc,IAAI,CAACO,OAAQ,mBAAkBD,YAAY,CAACE,QAAS,QAAO,CAC5H;QACH,CAAC,MAAM;UACLH,OAAO,GAAG,IAAI,CAACvB,oBAAoB,CACjC,8GAA8G,CAC/G;QACH;MACF,CAAC,MAAM;QACLuB,OAAO,GAAG,IAAI,CAACvB,oBAAoB,CACjC,gEAAgE,CACjE;MACH;MAEA,IAAI,CAACE,QAAQ,CAACyB,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEL,OAAO;MACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdxB,OAAO,CAACwB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMC,YAAY,GAAG,IAAI,CAAC9B,oBAAoB,CAAC,6CAA6C,CAAC;MAC7F,IAAI,CAACE,QAAQ,CAACyB,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEE,YAAY;MAC3C,CAAC,CAAC,CAAC;IACL;EACF;AACF;AAEA,eAAehC,cAAc"},"metadata":{},"sourceType":"module"}