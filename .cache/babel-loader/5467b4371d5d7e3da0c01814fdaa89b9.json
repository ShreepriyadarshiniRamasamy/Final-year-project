{"ast":null,"code":"var _jsxFileName = \"C:\\\\food\\\\food-nutrients-master\\\\src\\\\components\\\\micro-nutrient\\\\index.js\";\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Progress } from 'antd';\nexport default class MicroNutrient extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      wiki: '#',\n      percentage: 0,\n      raw: 0,\n      amount: 0,\n      unit: 'μg',\n      nutrientStatus: 'normal'\n    };\n  }\n  shouldComponentUpdate(nextProps) {\n    if (!nextProps.microNutrientData) return this.state.raw !== 0 || this.state.name === '';\n    return nextProps.microNutrientData.raw !== this.state.raw || nextProps.microNutrientData.unit !== this.state.unit;\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    return {\n      name: newProps.microNutrient.name,\n      wiki: newProps.microNutrient.wiki,\n      percentage: newProps.microNutrientData ? newProps.microNutrientData.percentage : 0,\n      raw: newProps.microNutrientData ? newProps.microNutrientData.raw : 0,\n      amount: newProps.microNutrientData ? newProps.microNutrientData.amount : 0,\n      unit: newProps.microNutrientData ? newProps.microNutrientData.unit : 'μg',\n      nutrientStatus: newProps.microNutrientData ? MicroNutrient.nutrientStatus(newProps.microNutrientData) : 'normal'\n    };\n  }\n  static nutrientStatus(microNutrient) {\n    let barType = 'normal';\n    if (microNutrient.raw >= microNutrient.rda && microNutrient.raw < 1.5 * microNutrient.rda) {\n      barType = 'success';\n    } else if (microNutrient.raw >= 1.5 * microNutrient.rda) {\n      barType = 'exception';\n    }\n    return barType;\n  }\n  render() {\n    const {\n      name,\n      wiki,\n      percentage,\n      amount,\n      unit,\n      nutrientStatus\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: name,\n      className: \"microNutrient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"microNutrientName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: wiki,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"microNutrientProgressBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      showInfo: false,\n      status: nutrientStatus,\n      percent: percentage,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, percentage, \"% \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"microNutrientAmount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, amount, \" \", unit));\n  }\n}\nMicroNutrient.propTypes = {\n  microNutrient: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    wiki: PropTypes.string.isRequired\n  }).isRequired,\n  microNutrientData: PropTypes.shape({\n    raw: PropTypes.number.isRequired,\n    amount: PropTypes.number.isRequired,\n    percentage: PropTypes.number.isRequired,\n    unit: PropTypes.string.isRequired\n  })\n};\nMicroNutrient.defaultProps = {\n  microNutrientData: null\n};","map":{"version":3,"names":["React","Component","PropTypes","Progress","MicroNutrient","state","name","wiki","percentage","raw","amount","unit","nutrientStatus","shouldComponentUpdate","nextProps","microNutrientData","getDerivedStateFromProps","newProps","prevState","microNutrient","barType","rda","render","propTypes","shape","string","isRequired","number","defaultProps"],"sources":["C:/food/food-nutrients-master/src/components/micro-nutrient/index.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Progress } from 'antd'\n\nexport default class MicroNutrient extends Component {\n  static propTypes = {\n    microNutrient: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      wiki: PropTypes.string.isRequired,\n    }).isRequired,\n    microNutrientData: PropTypes.shape({\n      raw: PropTypes.number.isRequired,\n      amount: PropTypes.number.isRequired,\n      percentage: PropTypes.number.isRequired,\n      unit: PropTypes.string.isRequired,\n    }),\n  }\n\n  static defaultProps = {\n    microNutrientData: null,\n  }\n  state = {\n    name: '',\n    wiki: '#',\n    percentage: 0,\n    raw: 0,\n    amount: 0,\n    unit: 'μg',\n    nutrientStatus: 'normal',\n  }\n  shouldComponentUpdate(nextProps) {\n    if (!nextProps.microNutrientData) return this.state.raw !== 0 || this.state.name === ''\n    return (\n      nextProps.microNutrientData.raw !== this.state.raw ||\n      nextProps.microNutrientData.unit !== this.state.unit\n    )\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    return {\n      name: newProps.microNutrient.name,\n      wiki: newProps.microNutrient.wiki,\n      percentage: newProps.microNutrientData ? newProps.microNutrientData.percentage : 0,\n      raw: newProps.microNutrientData ? newProps.microNutrientData.raw : 0,\n      amount: newProps.microNutrientData ? newProps.microNutrientData.amount : 0,\n      unit: newProps.microNutrientData ? newProps.microNutrientData.unit : 'μg',\n      nutrientStatus: newProps.microNutrientData\n        ? MicroNutrient.nutrientStatus(newProps.microNutrientData)\n        : 'normal',\n    }\n  }\n\n  static nutrientStatus(microNutrient) {\n    let barType = 'normal'\n    if (microNutrient.raw >= microNutrient.rda && microNutrient.raw < 1.5 * microNutrient.rda) {\n      barType = 'success'\n    } else if (microNutrient.raw >= 1.5 * microNutrient.rda) {\n      barType = 'exception'\n    }\n    return barType\n  }\n\n  render() {\n    const { name, wiki, percentage, amount, unit, nutrientStatus } = this.state\n\n    return (\n      <div key={name} className=\"microNutrient\">\n        <div className=\"microNutrientName\">\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={wiki}>\n            {name}\n          </a>\n        </div>\n        <div className=\"microNutrientProgressBar\">\n          <Progress showInfo={false} status={nutrientStatus} percent={percentage} size=\"small\" />\n          <span>{percentage}% </span>\n        </div>\n        <div className=\"microNutrientAmount\">\n          {amount} {unit}\n        </div>\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}