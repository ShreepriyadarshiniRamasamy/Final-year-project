{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\components\\\\Chatbot.js\";\nimport React, { useState, useEffect } from \"react\";\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([{\n    text: \"Hello! Ask me about food or exercise.\",\n    isBot: true\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [caloriesData, setCaloriesData] = useState([]);\n  const [exerciseData, setExerciseData] = useState([]);\n  useEffect(() => {\n    fetch(\"./data/calories.json\").then(response => response.json()).then(data => setCaloriesData(data)).catch(error => console.error(\"Error loading calories.json:\", error));\n    fetch(\"./data/exercise.json\").then(response => response.json()).then(data => setExerciseData(data)).catch(error => console.error(\"Error loading exercise.json:\", error));\n  }, []);\n  const generateResponse = userMessage => {\n    if (!userMessage) return \"I'm not sure what you mean. Try asking about food or exercise.\";\n    userMessage = userMessage.toLowerCase();\n    const foodItem = caloriesData.find(item => {\n      var _item$name;\n      return ((_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.toLowerCase()) === userMessage;\n    });\n    if (foodItem) {\n      return `Calories in ${foodItem.name}: ${foodItem.calories} kcal per serving.`;\n    }\n    const exerciseItem = exerciseData.find(item => {\n      var _item$name2;\n      return ((_item$name2 = item.name) === null || _item$name2 === void 0 ? void 0 : _item$name2.toLowerCase()) === userMessage;\n    });\n    if (exerciseItem) {\n      return `Calories burned in ${exerciseItem.name}: ${exerciseItem.calories_burned} kcal per hour.`;\n    }\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise.\";\n  };\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n    const userMessage = input;\n    setMessages([...messages, {\n      text: userMessage,\n      isBot: false\n    }]);\n    setTimeout(() => {\n      const botResponse = generateResponse(userMessage);\n      setMessages(prevMessages => [...prevMessages, {\n        text: botResponse,\n        isBot: true\n      }]);\n    }, 500);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: msg.isBot ? \"bot-message\" : \"user-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, msg.text))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Ask me about food or exercise...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","Chatbot","messages","setMessages","text","isBot","input","setInput","caloriesData","setCaloriesData","exerciseData","setExerciseData","fetch","then","response","json","data","catch","error","console","generateResponse","userMessage","toLowerCase","foodItem","find","item","name","calories","exerciseItem","calories_burned","handleSendMessage","trim","setTimeout","botResponse","prevMessages","map","msg","index","e","target","value"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([{ text: \"Hello! Ask me about food or exercise.\", isBot: true }]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [caloriesData, setCaloriesData] = useState([]);\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"./data/calories.json\")\r\n      .then(response => response.json())\r\n      .then(data => setCaloriesData(data))\r\n      .catch(error => console.error(\"Error loading calories.json:\", error));\r\n\r\n    fetch(\"./data/exercise.json\")\r\n      .then(response => response.json())\r\n      .then(data => setExerciseData(data))\r\n      .catch(error => console.error(\"Error loading exercise.json:\", error));\r\n  }, []);\r\n\r\n  const generateResponse = (userMessage) => {\r\n    if (!userMessage) return \"I'm not sure what you mean. Try asking about food or exercise.\";\r\n\r\n    userMessage = userMessage.toLowerCase();\r\n\r\n    const foodItem = caloriesData.find(item => item.name?.toLowerCase() === userMessage);\r\n    if (foodItem) {\r\n      return `Calories in ${foodItem.name}: ${foodItem.calories} kcal per serving.`;\r\n    }\r\n\r\n    const exerciseItem = exerciseData.find(item => item.name?.toLowerCase() === userMessage);\r\n    if (exerciseItem) {\r\n      return `Calories burned in ${exerciseItem.name}: ${exerciseItem.calories_burned} kcal per hour.`;\r\n    }\r\n\r\n    return \"I'm sorry, I couldn't find that information. Ask me about food or exercise.\";\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input;\r\n    setMessages([...messages, { text: userMessage, isBot: false }]);\r\n\r\n    setTimeout(() => {\r\n      const botResponse = generateResponse(userMessage);\r\n      setMessages(prevMessages => [...prevMessages, { text: botResponse, isBot: true }]);\r\n    }, 500);\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={msg.isBot ? \"bot-message\" : \"user-message\"}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder=\"Ask me about food or exercise...\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}