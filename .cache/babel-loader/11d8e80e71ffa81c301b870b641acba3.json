{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport DropDown from '../dropdown/dropdown';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nvar BreadcrumbItem = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BreadcrumbItem, _React$Component);\n  function BreadcrumbItem() {\n    var _this;\n    _classCallCheck(this, BreadcrumbItem);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BreadcrumbItem).apply(this, arguments));\n    _this.renderBreadcrumbItem = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _a = _this.props,\n        customizePrefixCls = _a.prefixCls,\n        separator = _a.separator,\n        children = _a.children,\n        overlay = _a.overlay,\n        restProps = __rest(_a, [\"prefixCls\", \"separator\", \"children\", \"overlay\"]);\n      var prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n      var link;\n      if ('href' in _this.props) {\n        link = React.createElement(\"a\", _extends({\n          className: \"\".concat(prefixCls, \"-link\")\n        }, restProps), children);\n      } else {\n        link = React.createElement(\"span\", _extends({\n          className: \"\".concat(prefixCls, \"-link\")\n        }, restProps), children);\n      } // wrap to dropDown\n\n      link = _this.renderBreadcrumbNode(link, prefixCls);\n      if (children) {\n        return React.createElement(\"span\", null, link, React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-separator\")\n        }, separator));\n      }\n      return null;\n    };\n    /**\n     * if overlay is have\n     * Wrap a DropDown\n     */\n\n    _this.renderBreadcrumbNode = function (breadcrumbItem, prefixCls) {\n      var overlay = _this.props.overlay;\n      if (overlay) {\n        return React.createElement(DropDown, {\n          overlay: overlay,\n          placement: \"bottomCenter\"\n        }, React.createElement(\"a\", {\n          className: \"\".concat(prefixCls, \"-overlay-link\")\n        }, breadcrumbItem, React.createElement(Icon, {\n          type: \"down\"\n        })));\n      }\n      return breadcrumbItem;\n    };\n    return _this;\n  }\n  _createClass(BreadcrumbItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderBreadcrumbItem);\n    }\n  }]);\n  return BreadcrumbItem;\n}(React.Component);\nexport { BreadcrumbItem as default };\nBreadcrumbItem.__ANT_BREADCRUMB_ITEM = true;\nBreadcrumbItem.defaultProps = {\n  separator: '/'\n};\nBreadcrumbItem.propTypes = {\n  prefixCls: PropTypes.string,\n  separator: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  href: PropTypes.string\n};","map":null,"metadata":{},"sourceType":"module"}