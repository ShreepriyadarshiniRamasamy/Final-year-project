{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function exhaust() {\n  return function (source) {\n    return source.lift(new SwitchFirstOperator());\n  };\n}\nvar SwitchFirstOperator = /*@__PURE__*/function () {\n  function SwitchFirstOperator() {}\n  SwitchFirstOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  };\n  return SwitchFirstOperator;\n}();\nvar SwitchFirstSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SwitchFirstSubscriber, _super);\n  function SwitchFirstSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n    _this.hasCompleted = false;\n    _this.hasSubscription = false;\n    return _this;\n  }\n  SwitchFirstSubscriber.prototype._next = function (value) {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  };\n  SwitchFirstSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  };\n  SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  };\n  return SwitchFirstSubscriber;\n}(OuterSubscriber);","map":null,"metadata":{},"sourceType":"module"}