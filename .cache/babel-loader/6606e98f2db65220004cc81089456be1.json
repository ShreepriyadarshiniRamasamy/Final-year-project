{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\OneDrive\\\\Documents\\\\project\\\\Food\\\\food-nutrients Phase-II\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // If you have any styles\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [caloriesData, setCaloriesData] = useState([]);\n  const [exerciseData, setExerciseData] = useState([]);\n  useEffect(() => {\n    // Fetching calories data\n    fetch('/data/calories.json').then(response => response.json()).then(data => {\n      console.log(\"Calories data fetched:\", data);\n      setCaloriesData(data);\n    }).catch(error => console.error('Error fetching calories data:', error));\n\n    // Fetching exercise data\n    fetch('/data/exercise.json').then(response => response.json()).then(data => {\n      console.log(\"Exercise data fetched:\", data);\n      setExerciseData(data);\n    }).catch(error => console.error('Error fetching exercise data:', error));\n  }, []);\n  const handleUserInput = input => {\n    setMessages([...messages, {\n      user: input\n    }]);\n    setUserInput('');\n\n    // Check if input matches a food item from the calories data\n    const food = caloriesData.find(item => item.food.toLowerCase() === input.toLowerCase());\n    if (food) {\n      setMessages(prevMessages => [...prevMessages, {\n        bot: `The calories in a ${food.food} are ${food.calories} calories.`\n      }]);\n    } else {\n      // If food not found, check for exercise info\n      const exercise = exerciseData.find(item => item.exercise.toLowerCase() === input.toLowerCase());\n      if (exercise) {\n        setMessages(prevMessages => [...prevMessages, {\n          bot: `You burn around ${exercise.calories_burned_per_hour} calories per hour by doing ${exercise.exercise}.`\n        }]);\n      } else {\n        // Default response if no match is found\n        setMessages(prevMessages => [...prevMessages, {\n          bot: \"Sorry, I don't have information about that.\"\n        }]);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '300px',\n      overflowY: 'scroll',\n      marginBottom: '20px',\n      padding: '10px',\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, message.user && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, \"User:\"), \" \", message.user), message.bot && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 32\n    }\n  }, \"Bot:\"), \" \", message.bot)))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userInput,\n    onChange: e => setUserInput(e.target.value),\n    placeholder: \"Ask about calories or exercise\",\n    style: {\n      padding: '10px',\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleUserInput(userInput),\n    style: {\n      padding: '10px',\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Food Nutrient and Exercise Chatbot\"), /*#__PURE__*/React.createElement(Chatbot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Chatbot","messages","setMessages","userInput","setUserInput","caloriesData","setCaloriesData","exerciseData","setExerciseData","fetch","then","response","json","data","console","log","catch","error","handleUserInput","input","user","food","find","item","toLowerCase","prevMessages","bot","calories","exercise","calories_burned_per_hour","height","overflowY","marginBottom","padding","border","map","message","index","e","target","value","width","marginLeft","App"],"sources":["C:/Users/shrut/OneDrive/Documents/project/Food/food-nutrients Phase-II/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'; // If you have any styles\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [caloriesData, setCaloriesData] = useState([]);\n  const [exerciseData, setExerciseData] = useState([]);\n\n  useEffect(() => {\n    // Fetching calories data\n    fetch('/data/calories.json')\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Calories data fetched:\", data);\n        setCaloriesData(data);\n      })\n      .catch(error => console.error('Error fetching calories data:', error));\n\n    // Fetching exercise data\n    fetch('/data/exercise.json')\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Exercise data fetched:\", data);\n        setExerciseData(data);\n      })\n      .catch(error => console.error('Error fetching exercise data:', error));\n  }, []);\n\n  const handleUserInput = (input) => {\n    setMessages([...messages, { user: input }]);\n    setUserInput('');\n\n    // Check if input matches a food item from the calories data\n    const food = caloriesData.find(item => item.food.toLowerCase() === input.toLowerCase());\n    if (food) {\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { bot: `The calories in a ${food.food} are ${food.calories} calories.` }\n      ]);\n    } else {\n      // If food not found, check for exercise info\n      const exercise = exerciseData.find(item => item.exercise.toLowerCase() === input.toLowerCase());\n      if (exercise) {\n        setMessages(prevMessages => [\n          ...prevMessages,\n          { bot: `You burn around ${exercise.calories_burned_per_hour} calories per hour by doing ${exercise.exercise}.` }\n        ]);\n      } else {\n        // Default response if no match is found\n        setMessages(prevMessages => [\n          ...prevMessages,\n          { bot: \"Sorry, I don't have information about that.\" }\n        ]);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ height: '300px', overflowY: 'scroll', marginBottom: '20px', padding: '10px', border: '1px solid #ccc' }}>\n        {messages.map((message, index) => (\n          <div key={index}>\n            {message.user && <p><strong>User:</strong> {message.user}</p>}\n            {message.bot && <p><strong>Bot:</strong> {message.bot}</p>}\n          </div>\n        ))}\n      </div>\n      \n      {/* Input for user query */}\n      <input \n        type=\"text\" \n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        placeholder=\"Ask about calories or exercise\"\n        style={{ padding: '10px', width: '80%' }}\n      />\n      <button onClick={() => handleUserInput(userInput)} style={{ padding: '10px', marginLeft: '10px' }}>Send</button>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Food Nutrient and Exercise Chatbot</h1>\n      <Chatbot />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}